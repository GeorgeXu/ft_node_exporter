#!/bin/bash
# auth: tanb
# date: Wed Dec  5 15:16:01 CST 2018

# 下载地址
dl_url="http://{{.DownloadAddr}}/{{.Name}}-{{.Version}}.tar.gz"

remote_host={{.KodoHost}}
bin_name="ft_node_exporter"
service_name="ft_node_exporter"

# 安装目录设置
install_dir="/usr/local/cloudcare/ft_node_exporter"
pid_file="${install_dir}/${bin_name}".pid
yml_cfg="${install_dir}/${bin_name}".yml
binary="${install_dir}/${bin_name}"
log="${install_dir}/${bin_name}.log"
install_log="${install_dir}/${bin_name}.install.log"
provider="aliyun"

env_cfg="${install_dir}"/kv.json
fileinfo_cfg="${install_dir}"/fileinfo.json

# 创建安装目录
if ! mkdir -p "${install_dir}"; then
  exit -1
fi

printf "===================================\n" | tee -a $install_log
echo "Date: `date`" | tee -a $install_log
printf "===================================\n" | tee -a $install_log

printf "current newest version: %s\n" "{{.Version}}" | tee -a $install_log

upgrade_flag=0
within_docker=0
enable_all=1
bind_addr="0.0.0.0:9200"

while [[ $# > 1 ]]
do
  opt="$1"

  case $opt in

     --env-cfg)
	env_cfg="$2"
	shift
	;;

     --fileinfo-cfg)
	fileinfo_cfg="$2"
	shift
	;;


    --enable-all)
      enable_all="$2"
      shift
      ;;


    --bind-addr)
      bind_addr="$2"
      shift
      ;;

    *)
      # unknown option
    ;;
  esac
  shift
done

########################################################
# 检查这些命令是否支持
########################################################
commands=(
curl
netstat
wget
tar
)

for c in "${commands[@]}"; do
  if ! hash $c; then
    printf "`$c` not found, exit.\n" $c | tee -a $install_log
    exit -1
  fi
done


########################################################
# 停止当前正在运行的 profwang_probe
########################################################
services=(
"${service_name}"
)

for s in "${services[@]}"; do
  printf "stopping ${s} ...\n" | tee -a $install_log

	service "$s" stop >/dev/null 2>&1
  systemctl stop "$s" >/dev/null 2>&1
  initctl stop "$s" >/dev/null 2>&1

  if ps -ef | pgrep "$s"; then
    printf "stop ${service_name} failed\n" | tee -a "$install_log"
    exit -1
  fi
done

########################################################
# 检查这些端口是否被占用
########################################################

ports=(
"$(cut -d ':' -f2 <<<${bind_addr})"
)

for ap in "${ports[@]}"; do
  if netstat -tunple | grep -w $ap; then
    printf "port %s been using...\n" $ap | tee -a $install_log
    exit -1
  fi
done

########################################################
# 下载最新并安装到指定目录
########################################################

printf "downloading new ${service_name}... \n" | tee -a ${install_log}
wget -O - "${dl_url}" | tar -xz -C ${install_dir}
if [ $? -ne 0 ]; then
  printf 'failed\n' | tee -a ${install_log}
  exit 1
else
  printf 'ok\n' | tee -a ${install_log}
fi

# 根据系统平台选择不同的程序
arch=`uname -m`
if [ "${arch}" = "x86_64" ]; then
  echo 'install on platform x86_64...' | tee -a $install_log
  mv "${install_dir}"/{{.Name}}-linux-amd64/{{.Name}} "${install_dir}"/
  mv "${install_dir}"/{{.Name}}-linux-amd64/osqueryd "${install_dir}"/
  mv "${install_dir}"/{{.Name}}-linux-amd64/kv.json "${install_dir}"/
  mv "${install_dir}"/{{.Name}}-linux-amd64/fileinfo.json "${install_dir}"/
else
  echo 'i386 not support, exit now!' | tee -a $install_log
  exit -1
fi

########################################################
# init settings
########################################################

printf "starting ${service_name} ...\n" | tee -a ${install_log}
(${binary}  --enable-all ${enable_all} \
	--env-cfg "${env_cfg}" \
	--fileinfo-cfg "${fileinfo_cfg}" \
	--bind-addr "${bind_addr}" &> ${log} &) 

sleep 1 
pid=`cat ${pid_file}`
printf "pid ${pid} \n"
if ps -p ${pid} > /dev/null
then
	echo "success, ${service_name} is running"
else
	echo "${service_name} start failed, see ${log} for details."
fi

exit 0

